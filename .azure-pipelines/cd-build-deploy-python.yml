# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Build, package, and deploy Python packages for microsoft_agents_m365copilot_core and microsoft_agents_m365copilot_beta

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'python/packages/microsoft_agents_m365copilot_beta/generated/**'
      - 'python/packages/microsoft_agents_m365copilot_beta/src/agents_m365_copilot_beta_request_adapter.py'      
      - 'python/packages/microsoft_agents_m365copilot_beta/src/agents_m365_copilot_beta_service_client.py'
      - 'python/packages/microsoft_agents_m365copilot_core/src/**'
  tags:
    include:
      - 'microsoft_agents_m365copilot_core*'
      - 'microsoft_agents_m365copilot_beta*'

variables:
  library_name_core: 'microsoft_agents_m365copilot_core'
  library_name_beta: 'microsoft_agents_m365copilot_beta'
  library_dir_core: 'packages/microsoft_agents_m365copilot_core'
  library_dir_beta: 'packages/microsoft_agents_m365copilot_beta'

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      vmImage: ubuntu-latest
    stages:

    - stage: build
      displayName: 'Build and Package Python Packages'
      # This condition allows the build to run for both tagged builds and manual builds.
      condition: or(contains(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot'), eq(variables['Build.Reason'], 'Manual'))
      jobs:
        - job: build_python
          displayName: 'Build, Test, and Package Core and Beta'
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            vmImage: ubuntu-latest

          steps:
            - task: UsePythonVersion@0
              displayName: 'Install Python 3.x'
              inputs:
                versionSpec: '3.x'
                addToPath: true

            - script: python -m pip install --upgrade pip

            # Build, test, and package Core Python library
            - script: pip install poetry
              displayName: 'Install Poetry'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'
              # This condition allows the build to run for both tagged core builds or manual builds.
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))    
              
            - script: poetry install
              displayName: 'Install core dependencies'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry run yapf -dr .
              displayName: 'Check code format for core' # Core only
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry run isort .
              displayName: 'Check import order'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))    
            
            - script: poetry run pylint . --disable=W --rcfile=../../.pylintrc
              displayName: 'Lint with Pylint'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry run pytest
              displayName: 'Run the core tests' # Core only
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'

            - script: poetry build
              displayName: 'Build Python package'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_core)'     
              
            - task: CopyFiles@2
              inputs:
                CleanTargetFolder: true
                sourceFolder: '$(Build.SourcesDirectory)/python/$(library_dir_core)/dist/'
                targetFolder: '$(Build.ArtifactStagingDirectory)/python/$(library_name_core)'
                Contents: |
                  *.tar.gz
                  *.whl
              displayName: "Copy Core Python package files"   
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))

            # Build, test, and package Beta Python library
            - script: pip install poetry
              displayName: 'Install Poetry'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_beta)'
              # This condition allows the build to run for both tagged core builds or manual builds.
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry install
              displayName: 'Install core dependencies'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_beta)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry run isort .
              displayName: 'Check import order'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_beta)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))    

            - script: poetry run pylint . --disable=W --rcfile=../../.pylintrc
              displayName: 'Lint with Pylint'
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_beta)'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))

            - script: poetry build
              displayName: 'Build Python package'
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))
              workingDirectory: '$(Build.SourcesDirectory)/python/$(library_dir_beta)'
              
            - task: CopyFiles@2
              inputs:
                CleanTargetFolder: true
                sourceFolder: '$(Build.SourcesDirectory)/python/$(library_dir_beta)/dist/'
                targetFolder: '$(Build.ArtifactStagingDirectory)/python/$(library_name_beta)'
                Contents: |
                  *.tar.gz
                  *.whl
              displayName: "Copy Beta Python package files"
              condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))

          templateContext:
            outputs:
              - output: pipelineArtifact
                displayName: 'Stage Core Python package artifact'
                artifactName: pypi_$(library_name_core)
                targetPath: '$(Build.ArtifactStagingDirectory)/python/$(library_name_core)'    
                condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_core'), eq(variables['Build.Reason'], 'Manual'))

              - output: pipelineArtifact
                displayName: 'Stage Beta Python package artifact'
                artifactName: pypi_$(library_name_beta)
                targetPath: '$(Build.ArtifactStagingDirectory)/python/$(library_name_beta)' 
                condition: or(startsWith(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot_beta'), eq(variables['Build.Reason'], 'Manual'))

    - stage: deploy
      displayName: 'Publish Python Packages'
      dependsOn: build
      # This condition allows the build to run for only tagged builds. Manual runs are temp and should be removed after validation.
      condition: or(and(contains(variables['Build.SourceBranch'], 'microsoft_agents_m365copilot'), succeeded()), eq(variables['Build.Reason'], 'Manual'))             
      jobs:
        - deployment: publish_python_packages
          displayName: 'Publish Python Packages'
          environment: agents-m365copilot-prod          
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            image: ubuntu-latest
            os: linux

          templateContext:
              type: releaseJob
              isProduction: true
              inputs:
                - input: pipelineArtifact
                  artifactName: pypi_$(library_name_core)
                  targetPath: '$(Build.ArtifactStagingDirectory)/python/$(library_name_core)'
                - input: pipelineArtifact
                  artifactName: pypi_$(library_name_beta)
                  targetPath: '$(Build.ArtifactStagingDirectory)/python/$(library_name_beta)'
          strategy:
            runOnce:
              deploy:
                steps:    
                - task: EsrpRelease@9
                  displayName: 'Publish Python packages via ESRP Release'
                  inputs:
                    connectedservicename: "Federated DevX ESRP Managed Identity Connection"
                    usemanagedidentity: true
                    keyvaultname: 'akv-prod-eastus'
                    signcertname: 'ReferencePackagePublisherCertificate'
                    clientid: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
                    intent: 'PackageDistribution'
                    contenttype: 'PYPI'
                    folderlocation: '$(Build.ArtifactStagingDirectory)/python'
                    owners: 'mmainer@microsoft.com,karthikra@microsoft.com'
                    approvers: 'mmainer@microsoft.com,christiano@microsoft.com,karthikra@microsoft.com,lramosvea@microsoft.com'
                    serviceendpointurl: 'https://api.esrp.microsoft.com'
                    mainpublisher: 'ESRPRELPACMAN'
                    domaintenantid: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'