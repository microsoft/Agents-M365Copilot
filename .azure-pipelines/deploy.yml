# Source build validation scenario: official -> official
name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  pipelines:
  - pipeline: 'Microsoft Agents M365 Copilot Build Artifacts'
    source: '\Microsoft Agents M365 Copilot\Microsoft Agents M365 Copilot Build Artifacts'
    branch: addbuildpipeline # TODO: Set to main, add to parameter settable at queue time in UI to do deploymnets from branch.

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      vmImage: windows-latest
    # customBuildTags:
    # - ${{ parameters.os }}
    # - Cross platform

    featureFlags:
      branchValidation: enforceInReleaseJobs

    stages:
    - stage: release
      jobs:
      - job: release
        templateContext:
          isProduction: true
          inputs:
          - input: pipelineArtifact
            pipeline: 'Microsoft Agents M365 Copilot Build Artifacts'
            artifactName: ArtifactsForRelease
            targetPath: $(Build.ArtifactStagingDirectory)/ArtifactsForRelease
          outputs:
          - output: nuget
            displayName: Publish Nuget package
            useDotNetTask: false
            packagesToPush: '$(Build.ArtifactStagingDirectory)/ArtifactsForRelease/*nupkg'
            packageParentPath: $(Build.ArtifactStagingDirectory)\
            nuGetFeedType: external  # Change to external for external
            publishPackageMetadata: true
            publishFeedCredentials: 'M365 Copilot NuGet Connection'
    - stage: typescript_release
      
      jobs:
        - deployment: agents_m365copilot_ts_release
          environment: 'msgraph-npm-org'
          displayName: Publish packages to npm
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            image: windows-2022
            os: windows
          strategy:
            runOnce:
              deploy:
                steps:
                  - task: NodeTool@0
                    inputs:
                      versionSource: spec
                      versionSpec: 20.x
                    displayName: Install Node.js
                  - download: current
                    artifact: build-drop
                  - task: EsrpRelease@9
                    displayName: 'Publish packages NPM artifacts via ESRP'
                    inputs:
                      connectedservicename: "Federated DevX ESRP Managed Identity Connection"
                      usemanagedidentity: true
                      keyvaultname: "akv-prod-eastus"
                      signcertname: "ReferencePackagePublisherCertificate"
                      clientid: "65035b7f-7357-4f29-bf25-c5ee5c3949f8"
                      intent: "PackageDistribution"
                      contenttype: "npm"
                      folderlocation: "$(Build.ArtifactStagingDirectory)/npm/"
                      owners: "mmainer@microsoft.com,christiano@microsoft.com"
                      approvers: "mmainer@microsoft.com,christiano@microsoft.com"
                      serviceendpointurl: "https://api.esrp.microsoft.com"
                      mainpublisher: "ESRPRELPACMAN"
                      domaintenantid: "cdc5aeea-15c5-4db6-b079-fcadd2505dc2"