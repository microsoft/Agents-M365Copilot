# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Build, package, and deploy TypeScript package for @microsoft/agents-m365copilot-core

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'typescript/packages/agents-m365copilot-core/src/**'
  tags:
    include:
      - '@microsoft/agents-m365copilot-core*'

pr: none

variables:
  package_name_core: 'agents-m365copilot-core'
  package_dir_core: 'packages/agents-m365copilot-core'

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      vmImage: windows-latest
    stages:

    - stage: build
      displayName: 'Build and Package Core TypeScript Package'
      # This condition allows the build to run for both tagged builds and manual builds.
      condition: or(contains(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))
      jobs:
        - job: build_typescript
          displayName: 'Build, Test, and Package Core'
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            vmImage: ubuntu-latest

          steps:
            - task: UseNode@1
              displayName: 'Install Node.js'
              inputs:
                version: '22.x'
            - script: npm ci
              displayName: 'Install npm dependencies'
              workingDirectory: '$(Build.SourcesDirectory)/typescript/'

            # Build and test Core TypeScript package
            - script: npm run build --workspace=$(package_dir_core)
              displayName: 'Build $(package_name_core)'
              workingDirectory: '$(Build.SourcesDirectory)/typescript/'
              condition: or(startsWith(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))

            - script: npm test --workspace=$(package_dir_core)
              displayName: 'Run tests $(package_name_core)'
              workingDirectory: '$(Build.SourcesDirectory)/typescript/' 
              condition: or(startsWith(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))

            - script: npm pack --workspace=$(package_dir_core) --pack-destination=$(Build.SourcesDirectory)/typescript/$(package_dir_core)
              displayName: 'Generate npm package $(package_name_core)'
              workingDirectory: '$(Build.SourcesDirectory)/typescript'
              condition: or(startsWith(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))

            # Stage artifacts for Core package

            - task: CopyFiles@2
              inputs:
                sourceFolder: '$(Build.SourcesDirectory)/typescript/$(package_dir_core)'
                targetFolder: '$(Build.ArtifactStagingDirectory)/npm/$(package_name_core)'
                Contents: |
                  microsoft-agents-m365copilot-core*.tgz
              displayName: "Copy npm package files for $(package_name_core)"
              condition: or(startsWith(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))

          templateContext:
            outputs:
              - output: pipelineArtifact
                displayName: 'Stage Core TypeScript package artifacts'
                artifactName: npm_$(package_name_core)
                targetPath: '$(Build.ArtifactStagingDirectory)/npm/$(package_name_core)'
                condition: or(startsWith(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), eq(variables['Build.Reason'], 'Manual'))

    - stage: deploy
      displayName: 'Deploy NPM Package'
      dependsOn: build
      # This condition allows the build to run for only tagged builds. Manual runs are temp and should be removed after validation.
      condition: or(and(contains(variables['Build.SourceBranch'], '@microsoft/agents-m365copilot-core'), succeeded()), eq(variables['Build.Reason'], 'Manual'))
      jobs:
        - deployment: publish_npm_package
          displayName: 'Publish npm Package'
          environment: agents-m365copilot-prod
          pool:
            name: Azure-Pipelines-1ESPT-ExDShared
            image: ubuntu-latest
            os: linux

          templateContext:
              type: releaseJob
              isProduction: true
              inputs:
                - input: pipelineArtifact
                  artifactName: npm_$(package_name_core)
                  targetPath: '$(Build.ArtifactStagingDirectory)/npm'
          strategy:
            runOnce:
              deploy:
                steps:    
                - task: EsrpRelease@9
                  displayName: 'Publish NPM Core package via ESRP Release'
                  inputs:
                    connectedservicename: "Federated DevX ESRP Managed Identity Connection"
                    usemanagedidentity: false
                    keyvaultname: 'akv-prod-eastus'
                    authcertname: 'ReferenceLibraryPrivateCert'
                    signcertname: 'ReferencePackagePublisherCertificate'
                    clientid: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
                    intent: 'PackageDistribution'
                    contenttype: 'npm'
                    contentsource: 'Folder'
                    folderlocation: '$(Build.ArtifactStagingDirectory)/npm'
                    owners: 'mmainer@microsoft.com,karthikra@microsoft.com'
                    approvers: 'mmainer@microsoft.com,christiano@microsoft.com,karthikra@microsoft.com,lramosvea@microsoft.com'
                    serviceendpointurl: 'https://api.esrp.microsoft.com'
                    mainpublisher: 'ESRPRELPACMAN'
                    domaintenantid: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'