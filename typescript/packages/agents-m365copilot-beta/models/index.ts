/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { deserializeIntoSubmissionUserIdentity, type SubmissionUserIdentity } from './security/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export type AccessScope = (typeof AccessScopeObject)[keyof typeof AccessScopeObject];
export interface AiInteraction extends Entity, Parsable {
    /**
     * The appClass property
     */
    appClass?: string | null;
    /**
     * The attachments property
     */
    attachments?: AiInteractionAttachment[] | null;
    /**
     * The body property
     */
    body?: ItemBody | null;
    /**
     * The contexts property
     */
    contexts?: AiInteractionContext[] | null;
    /**
     * The conversationType property
     */
    conversationType?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The from property
     */
    from?: IdentitySet | null;
    /**
     * The interactionType property
     */
    interactionType?: AiInteractionType | null;
    /**
     * The links property
     */
    links?: AiInteractionLink[] | null;
    /**
     * The locale property
     */
    locale?: string | null;
    /**
     * The mentions property
     */
    mentions?: AiInteractionMention[] | null;
    /**
     * The requestId property
     */
    requestId?: string | null;
    /**
     * The sessionId property
     */
    sessionId?: string | null;
}
export interface AiInteractionAttachment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The attachmentId property
     */
    attachmentId?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The content property
     */
    content?: string | null;
    /**
     * The contentType property
     */
    contentType?: string | null;
    /**
     * The contentUrl property
     */
    contentUrl?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The teamsAppId property
     */
    teamsAppId?: string | null;
    /**
     * The thumbnailUrl property
     */
    thumbnailUrl?: string | null;
}
export interface AiInteractionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AiInteraction[] | null;
}
export interface AiInteractionContext extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The contextReference property
     */
    contextReference?: string | null;
    /**
     * The contextType property
     */
    contextType?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AiInteractionHistory extends Entity, Parsable {
    /**
     * The interactions property
     */
    interactions?: AiInteraction[] | null;
}
export interface AiInteractionLink extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The linkType property
     */
    linkType?: string | null;
    /**
     * The linkUrl property
     */
    linkUrl?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AiInteractionMention extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The mentioned property
     */
    mentioned?: AiInteractionMentionedIdentitySet | null;
    /**
     * The mentionId property
     */
    mentionId?: number | null;
    /**
     * The mentionText property
     */
    mentionText?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AiInteractionMentionedIdentitySet extends IdentitySet, Parsable {
    /**
     * The conversation property
     */
    conversation?: TeamworkConversationIdentity | null;
    /**
     * The tag property
     */
    tag?: TeamworkTagIdentity | null;
}
export type AiInteractionType = (typeof AiInteractionTypeObject)[keyof typeof AiInteractionTypeObject];
export interface AiUser extends Entity, Parsable {
    /**
     * The interactionHistory property
     */
    interactionHistory?: AiInteractionHistory | null;
}
export interface AiUserCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AiUser[] | null;
}
export interface ApprovalIdentitySet extends IdentitySet, Parsable {
    /**
     * The group property
     */
    group?: Identity | null;
}
export interface AuditUserIdentity extends Parsable, UserIdentity {
    /**
     * The homeTenantId property
     */
    homeTenantId?: string | null;
    /**
     * The homeTenantName property
     */
    homeTenantName?: string | null;
}
export interface AzureCommunicationServicesUserIdentity extends Identity, Parsable {
    /**
     * The azureCommunicationServicesResourceId property
     */
    azureCommunicationServicesResourceId?: string | null;
}
export interface BaseCollectionPaginationCountResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataCount property
     */
    odataCount?: number | null;
    /**
     * The OdataNextLink property
     */
    odataNextLink?: string | null;
}
export type BodyType = (typeof BodyTypeObject)[keyof typeof BodyTypeObject];
export interface ChatMessageFromIdentitySet extends IdentitySet, Parsable {
}
export interface ChatMessageMentionedIdentitySet extends IdentitySet, Parsable {
    /**
     * The conversation property
     */
    conversation?: TeamworkConversationIdentity | null;
    /**
     * The tag property
     */
    tag?: TeamworkTagIdentity | null;
}
export interface ChatMessageReactionIdentitySet extends IdentitySet, Parsable {
}
export interface CommunicationsApplicationIdentity extends Identity, Parsable {
    /**
     * The applicationType property
     */
    applicationType?: string | null;
    /**
     * The hidden property
     */
    hidden?: boolean | null;
}
export interface CommunicationsApplicationInstanceIdentity extends Identity, Parsable {
    /**
     * The hidden property
     */
    hidden?: boolean | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export interface CommunicationsEncryptedIdentity extends Identity, Parsable {
}
export interface CommunicationsGuestIdentity extends Identity, Parsable {
    /**
     * The email property
     */
    email?: string | null;
}
export interface CommunicationsIdentitySet extends IdentitySet, Parsable {
    /**
     * The applicationInstance property
     */
    applicationInstance?: Identity | null;
    /**
     * The assertedIdentity property
     */
    assertedIdentity?: Identity | null;
    /**
     * The azureCommunicationServicesUser property
     */
    azureCommunicationServicesUser?: Identity | null;
    /**
     * The encrypted property
     */
    encrypted?: Identity | null;
    /**
     * The endpointType property
     */
    endpointType?: EndpointType | null;
    /**
     * The guest property
     */
    guest?: Identity | null;
    /**
     * The onPremises property
     */
    onPremises?: Identity | null;
    /**
     * The phone property
     */
    phone?: Identity | null;
}
export interface CommunicationsPhoneIdentity extends Identity, Parsable {
}
export interface CommunicationsUserIdentity extends Identity, Parsable {
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export interface CopilotAdmin extends Entity, Parsable {
    /**
     * The settings property
     */
    settings?: CopilotAdminSetting | null;
}
export interface CopilotAdminLimitedMode extends Entity, Parsable {
    /**
     * The groupId property
     */
    groupId?: string | null;
    /**
     * The isEnabledForGroup property
     */
    isEnabledForGroup?: boolean | null;
}
export interface CopilotAdminSetting extends Entity, Parsable {
    /**
     * The limitedMode property
     */
    limitedMode?: CopilotAdminLimitedMode | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionAttachment}
 */
// @ts-ignore
export function createAiInteractionAttachmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionAttachment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionCollectionResponse}
 */
// @ts-ignore
export function createAiInteractionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionContext}
 */
// @ts-ignore
export function createAiInteractionContextFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionContext;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteraction}
 */
// @ts-ignore
export function createAiInteractionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteraction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionHistory}
 */
// @ts-ignore
export function createAiInteractionHistoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionHistory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionLink}
 */
// @ts-ignore
export function createAiInteractionLinkFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionLink;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionMentionedIdentitySet}
 */
// @ts-ignore
export function createAiInteractionMentionedIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionMentionedIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiInteractionMention}
 */
// @ts-ignore
export function createAiInteractionMentionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiInteractionMention;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiUserCollectionResponse}
 */
// @ts-ignore
export function createAiUserCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiUserCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiUser}
 */
// @ts-ignore
export function createAiUserFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiUser;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApprovalIdentitySet}
 */
// @ts-ignore
export function createApprovalIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApprovalIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditUserIdentity}
 */
// @ts-ignore
export function createAuditUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureCommunicationServicesUserIdentity}
 */
// @ts-ignore
export function createAzureCommunicationServicesUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureCommunicationServicesUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BaseCollectionPaginationCountResponse}
 */
// @ts-ignore
export function createBaseCollectionPaginationCountResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBaseCollectionPaginationCountResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChatMessageFromIdentitySet}
 */
// @ts-ignore
export function createChatMessageFromIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChatMessageFromIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChatMessageMentionedIdentitySet}
 */
// @ts-ignore
export function createChatMessageMentionedIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChatMessageMentionedIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChatMessageReactionIdentitySet}
 */
// @ts-ignore
export function createChatMessageReactionIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChatMessageReactionIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsApplicationIdentity}
 */
// @ts-ignore
export function createCommunicationsApplicationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsApplicationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsApplicationInstanceIdentity}
 */
// @ts-ignore
export function createCommunicationsApplicationInstanceIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsApplicationInstanceIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsEncryptedIdentity}
 */
// @ts-ignore
export function createCommunicationsEncryptedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsEncryptedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsGuestIdentity}
 */
// @ts-ignore
export function createCommunicationsGuestIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsGuestIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsIdentitySet}
 */
// @ts-ignore
export function createCommunicationsIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsPhoneIdentity}
 */
// @ts-ignore
export function createCommunicationsPhoneIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsPhoneIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommunicationsUserIdentity}
 */
// @ts-ignore
export function createCommunicationsUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommunicationsUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CopilotAdmin}
 */
// @ts-ignore
export function createCopilotAdminFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCopilotAdmin;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CopilotAdminLimitedMode}
 */
// @ts-ignore
export function createCopilotAdminLimitedModeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCopilotAdminLimitedMode;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CopilotAdminSetting}
 */
// @ts-ignore
export function createCopilotAdminSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCopilotAdminSetting;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetailsInfo}
 */
// @ts-ignore
export function createDetailsInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetailsInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dictionaries}
 */
// @ts-ignore
export function createDictionariesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.searchResourceMetadataDictionary":
                    return deserializeIntoSearchResourceMetadataDictionary;
            }
        }
    }
    return deserializeIntoDictionaries;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailIdentity}
 */
// @ts-ignore
export function createEmailIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EngagementIdentitySet}
 */
// @ts-ignore
export function createEngagementIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEngagementIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Entity}
 */
// @ts-ignore
export function createEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.aiInteraction":
                    return deserializeIntoAiInteraction;
                case "#microsoft.graph.aiInteractionHistory":
                    return deserializeIntoAiInteractionHistory;
                case "#microsoft.graph.aiUser":
                    return deserializeIntoAiUser;
                case "#microsoft.graph.copilotAdmin":
                    return deserializeIntoCopilotAdmin;
                case "#microsoft.graph.copilotAdminLimitedMode":
                    return deserializeIntoCopilotAdminLimitedMode;
                case "#microsoft.graph.copilotAdminSetting":
                    return deserializeIntoCopilotAdminSetting;
            }
        }
    }
    return deserializeIntoEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Identity}
 */
// @ts-ignore
export function createIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.auditUserIdentity":
                    return deserializeIntoAuditUserIdentity;
                case "#microsoft.graph.azureCommunicationServicesUserIdentity":
                    return deserializeIntoAzureCommunicationServicesUserIdentity;
                case "#microsoft.graph.callRecords.userIdentity":
                    return deserializeIntoUserIdentity;
                case "#microsoft.graph.communicationsApplicationIdentity":
                    return deserializeIntoCommunicationsApplicationIdentity;
                case "#microsoft.graph.communicationsApplicationInstanceIdentity":
                    return deserializeIntoCommunicationsApplicationInstanceIdentity;
                case "#microsoft.graph.communicationsEncryptedIdentity":
                    return deserializeIntoCommunicationsEncryptedIdentity;
                case "#microsoft.graph.communicationsGuestIdentity":
                    return deserializeIntoCommunicationsGuestIdentity;
                case "#microsoft.graph.communicationsPhoneIdentity":
                    return deserializeIntoCommunicationsPhoneIdentity;
                case "#microsoft.graph.communicationsUserIdentity":
                    return deserializeIntoCommunicationsUserIdentity;
                case "#microsoft.graph.emailIdentity":
                    return deserializeIntoEmailIdentity;
                case "#microsoft.graph.initiator":
                    return deserializeIntoInitiator;
                case "#microsoft.graph.programResource":
                    return deserializeIntoProgramResource;
                case "#microsoft.graph.provisionedIdentity":
                    return deserializeIntoProvisionedIdentity;
                case "#microsoft.graph.provisioningServicePrincipal":
                    return deserializeIntoProvisioningServicePrincipal;
                case "#microsoft.graph.provisioningSystem":
                    return deserializeIntoProvisioningSystem;
                case "#microsoft.graph.security.submissionUserIdentity":
                    return deserializeIntoSubmissionUserIdentity;
                case "#microsoft.graph.servicePrincipalIdentity":
                    return deserializeIntoServicePrincipalIdentity;
                case "#microsoft.graph.sharePointIdentity":
                    return deserializeIntoSharePointIdentity;
                case "#microsoft.graph.sourceProvisionedIdentity":
                    return deserializeIntoSourceProvisionedIdentity;
                case "#microsoft.graph.targetProvisionedIdentity":
                    return deserializeIntoTargetProvisionedIdentity;
                case "#microsoft.graph.teamworkApplicationIdentity":
                    return deserializeIntoTeamworkApplicationIdentity;
                case "#microsoft.graph.teamworkConversationIdentity":
                    return deserializeIntoTeamworkConversationIdentity;
                case "#microsoft.graph.teamworkTagIdentity":
                    return deserializeIntoTeamworkTagIdentity;
                case "#microsoft.graph.teamworkUserIdentity":
                    return deserializeIntoTeamworkUserIdentity;
                case "#microsoft.graph.userIdentity":
                    return deserializeIntoUserIdentity;
                case "#microsoft.graph.userInformation":
                    return deserializeIntoUserInformation;
            }
        }
    }
    return deserializeIntoIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IdentitySet}
 */
// @ts-ignore
export function createIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.aiInteractionMentionedIdentitySet":
                    return deserializeIntoAiInteractionMentionedIdentitySet;
                case "#microsoft.graph.approvalIdentitySet":
                    return deserializeIntoApprovalIdentitySet;
                case "#microsoft.graph.chatMessageFromIdentitySet":
                    return deserializeIntoChatMessageFromIdentitySet;
                case "#microsoft.graph.chatMessageMentionedIdentitySet":
                    return deserializeIntoChatMessageMentionedIdentitySet;
                case "#microsoft.graph.chatMessageReactionIdentitySet":
                    return deserializeIntoChatMessageReactionIdentitySet;
                case "#microsoft.graph.communicationsIdentitySet":
                    return deserializeIntoCommunicationsIdentitySet;
                case "#microsoft.graph.engagementIdentitySet":
                    return deserializeIntoEngagementIdentitySet;
                case "#microsoft.graph.sharePointIdentitySet":
                    return deserializeIntoSharePointIdentitySet;
            }
        }
    }
    return deserializeIntoIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Initiator}
 */
// @ts-ignore
export function createInitiatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInitiator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemBody}
 */
// @ts-ignore
export function createItemBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KeyValuePair}
 */
// @ts-ignore
export function createKeyValuePairFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKeyValuePair;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProgramResource}
 */
// @ts-ignore
export function createProgramResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProgramResource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProvisionedIdentity}
 */
// @ts-ignore
export function createProvisionedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProvisionedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProvisioningServicePrincipal}
 */
// @ts-ignore
export function createProvisioningServicePrincipalFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProvisioningServicePrincipal;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProvisioningSystem}
 */
// @ts-ignore
export function createProvisioningSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProvisioningSystem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrievalExtract}
 */
// @ts-ignore
export function createRetrievalExtractFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrievalExtract;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrievalHit}
 */
// @ts-ignore
export function createRetrievalHitFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrievalHit;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrievalResponse}
 */
// @ts-ignore
export function createRetrievalResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrievalResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchResourceMetadataDictionary}
 */
// @ts-ignore
export function createSearchResourceMetadataDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchResourceMetadataDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchSensitivityLabelInfo}
 */
// @ts-ignore
export function createSearchSensitivityLabelInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchSensitivityLabelInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServicePrincipalIdentity}
 */
// @ts-ignore
export function createServicePrincipalIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServicePrincipalIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointIdentity}
 */
// @ts-ignore
export function createSharePointIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointIdentitySet}
 */
// @ts-ignore
export function createSharePointIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SourceProvisionedIdentity}
 */
// @ts-ignore
export function createSourceProvisionedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSourceProvisionedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TargetProvisionedIdentity}
 */
// @ts-ignore
export function createTargetProvisionedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTargetProvisionedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamworkApplicationIdentity}
 */
// @ts-ignore
export function createTeamworkApplicationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamworkApplicationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamworkConversationIdentity}
 */
// @ts-ignore
export function createTeamworkConversationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamworkConversationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamworkTagIdentity}
 */
// @ts-ignore
export function createTeamworkTagIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamworkTagIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamworkUserIdentity}
 */
// @ts-ignore
export function createTeamworkUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamworkUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserIdentity}
 */
// @ts-ignore
export function createUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.auditUserIdentity":
                    return deserializeIntoAuditUserIdentity;
                case "#microsoft.graph.userInformation":
                    return deserializeIntoUserInformation;
            }
        }
    }
    return deserializeIntoUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserInformation}
 */
// @ts-ignore
export function createUserInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserInformation;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteraction(aiInteraction: Partial<AiInteraction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(aiInteraction),
        "appClass": n => { aiInteraction.appClass = n.getStringValue(); },
        "attachments": n => { aiInteraction.attachments = n.getCollectionOfObjectValues<AiInteractionAttachment>(createAiInteractionAttachmentFromDiscriminatorValue); },
        "body": n => { aiInteraction.body = n.getObjectValue<ItemBody>(createItemBodyFromDiscriminatorValue); },
        "contexts": n => { aiInteraction.contexts = n.getCollectionOfObjectValues<AiInteractionContext>(createAiInteractionContextFromDiscriminatorValue); },
        "conversationType": n => { aiInteraction.conversationType = n.getStringValue(); },
        "createdDateTime": n => { aiInteraction.createdDateTime = n.getDateValue(); },
        "etag": n => { aiInteraction.etag = n.getStringValue(); },
        "from": n => { aiInteraction.from = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "interactionType": n => { aiInteraction.interactionType = n.getEnumValue<AiInteractionType>(AiInteractionTypeObject); },
        "links": n => { aiInteraction.links = n.getCollectionOfObjectValues<AiInteractionLink>(createAiInteractionLinkFromDiscriminatorValue); },
        "locale": n => { aiInteraction.locale = n.getStringValue(); },
        "mentions": n => { aiInteraction.mentions = n.getCollectionOfObjectValues<AiInteractionMention>(createAiInteractionMentionFromDiscriminatorValue); },
        "requestId": n => { aiInteraction.requestId = n.getStringValue(); },
        "sessionId": n => { aiInteraction.sessionId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionAttachment(aiInteractionAttachment: Partial<AiInteractionAttachment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attachmentId": n => { aiInteractionAttachment.attachmentId = n.getStringValue(); },
        "backingStoreEnabled": n => { aiInteractionAttachment.backingStoreEnabled = true; },
        "content": n => { aiInteractionAttachment.content = n.getStringValue(); },
        "contentType": n => { aiInteractionAttachment.contentType = n.getStringValue(); },
        "contentUrl": n => { aiInteractionAttachment.contentUrl = n.getStringValue(); },
        "name": n => { aiInteractionAttachment.name = n.getStringValue(); },
        "@odata.type": n => { aiInteractionAttachment.odataType = n.getStringValue(); },
        "teamsAppId": n => { aiInteractionAttachment.teamsAppId = n.getStringValue(); },
        "thumbnailUrl": n => { aiInteractionAttachment.thumbnailUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionCollectionResponse(aiInteractionCollectionResponse: Partial<AiInteractionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(aiInteractionCollectionResponse),
        "value": n => { aiInteractionCollectionResponse.value = n.getCollectionOfObjectValues<AiInteraction>(createAiInteractionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionContext(aiInteractionContext: Partial<AiInteractionContext> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { aiInteractionContext.backingStoreEnabled = true; },
        "contextReference": n => { aiInteractionContext.contextReference = n.getStringValue(); },
        "contextType": n => { aiInteractionContext.contextType = n.getStringValue(); },
        "displayName": n => { aiInteractionContext.displayName = n.getStringValue(); },
        "@odata.type": n => { aiInteractionContext.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionHistory(aiInteractionHistory: Partial<AiInteractionHistory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(aiInteractionHistory),
        "interactions": n => { aiInteractionHistory.interactions = n.getCollectionOfObjectValues<AiInteraction>(createAiInteractionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionLink(aiInteractionLink: Partial<AiInteractionLink> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { aiInteractionLink.backingStoreEnabled = true; },
        "displayName": n => { aiInteractionLink.displayName = n.getStringValue(); },
        "linkType": n => { aiInteractionLink.linkType = n.getStringValue(); },
        "linkUrl": n => { aiInteractionLink.linkUrl = n.getStringValue(); },
        "@odata.type": n => { aiInteractionLink.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionMention(aiInteractionMention: Partial<AiInteractionMention> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { aiInteractionMention.backingStoreEnabled = true; },
        "mentioned": n => { aiInteractionMention.mentioned = n.getObjectValue<AiInteractionMentionedIdentitySet>(createAiInteractionMentionedIdentitySetFromDiscriminatorValue); },
        "mentionId": n => { aiInteractionMention.mentionId = n.getNumberValue(); },
        "mentionText": n => { aiInteractionMention.mentionText = n.getStringValue(); },
        "@odata.type": n => { aiInteractionMention.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiInteractionMentionedIdentitySet(aiInteractionMentionedIdentitySet: Partial<AiInteractionMentionedIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(aiInteractionMentionedIdentitySet),
        "conversation": n => { aiInteractionMentionedIdentitySet.conversation = n.getObjectValue<TeamworkConversationIdentity>(createTeamworkConversationIdentityFromDiscriminatorValue); },
        "tag": n => { aiInteractionMentionedIdentitySet.tag = n.getObjectValue<TeamworkTagIdentity>(createTeamworkTagIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiUser(aiUser: Partial<AiUser> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(aiUser),
        "interactionHistory": n => { aiUser.interactionHistory = n.getObjectValue<AiInteractionHistory>(createAiInteractionHistoryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiUserCollectionResponse(aiUserCollectionResponse: Partial<AiUserCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(aiUserCollectionResponse),
        "value": n => { aiUserCollectionResponse.value = n.getCollectionOfObjectValues<AiUser>(createAiUserFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApprovalIdentitySet(approvalIdentitySet: Partial<ApprovalIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(approvalIdentitySet),
        "group": n => { approvalIdentitySet.group = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditUserIdentity(auditUserIdentity: Partial<AuditUserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoUserIdentity(auditUserIdentity),
        "homeTenantId": n => { auditUserIdentity.homeTenantId = n.getStringValue(); },
        "homeTenantName": n => { auditUserIdentity.homeTenantName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureCommunicationServicesUserIdentity(azureCommunicationServicesUserIdentity: Partial<AzureCommunicationServicesUserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(azureCommunicationServicesUserIdentity),
        "azureCommunicationServicesResourceId": n => { azureCommunicationServicesUserIdentity.azureCommunicationServicesResourceId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBaseCollectionPaginationCountResponse(baseCollectionPaginationCountResponse: Partial<BaseCollectionPaginationCountResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { baseCollectionPaginationCountResponse.backingStoreEnabled = true; },
        "@odata.count": n => { baseCollectionPaginationCountResponse.odataCount = n.getNumberValue(); },
        "@odata.nextLink": n => { baseCollectionPaginationCountResponse.odataNextLink = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChatMessageFromIdentitySet(chatMessageFromIdentitySet: Partial<ChatMessageFromIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageFromIdentitySet),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChatMessageMentionedIdentitySet(chatMessageMentionedIdentitySet: Partial<ChatMessageMentionedIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageMentionedIdentitySet),
        "conversation": n => { chatMessageMentionedIdentitySet.conversation = n.getObjectValue<TeamworkConversationIdentity>(createTeamworkConversationIdentityFromDiscriminatorValue); },
        "tag": n => { chatMessageMentionedIdentitySet.tag = n.getObjectValue<TeamworkTagIdentity>(createTeamworkTagIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChatMessageReactionIdentitySet(chatMessageReactionIdentitySet: Partial<ChatMessageReactionIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageReactionIdentitySet),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsApplicationIdentity(communicationsApplicationIdentity: Partial<CommunicationsApplicationIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsApplicationIdentity),
        "applicationType": n => { communicationsApplicationIdentity.applicationType = n.getStringValue(); },
        "hidden": n => { communicationsApplicationIdentity.hidden = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsApplicationInstanceIdentity(communicationsApplicationInstanceIdentity: Partial<CommunicationsApplicationInstanceIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsApplicationInstanceIdentity),
        "hidden": n => { communicationsApplicationInstanceIdentity.hidden = n.getBooleanValue(); },
        "tenantId": n => { communicationsApplicationInstanceIdentity.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsEncryptedIdentity(communicationsEncryptedIdentity: Partial<CommunicationsEncryptedIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsEncryptedIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsGuestIdentity(communicationsGuestIdentity: Partial<CommunicationsGuestIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsGuestIdentity),
        "email": n => { communicationsGuestIdentity.email = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsIdentitySet(communicationsIdentitySet: Partial<CommunicationsIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(communicationsIdentitySet),
        "applicationInstance": n => { communicationsIdentitySet.applicationInstance = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "assertedIdentity": n => { communicationsIdentitySet.assertedIdentity = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "azureCommunicationServicesUser": n => { communicationsIdentitySet.azureCommunicationServicesUser = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "encrypted": n => { communicationsIdentitySet.encrypted = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "endpointType": n => { communicationsIdentitySet.endpointType = n.getEnumValue<EndpointType>(EndpointTypeObject); },
        "guest": n => { communicationsIdentitySet.guest = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "onPremises": n => { communicationsIdentitySet.onPremises = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "phone": n => { communicationsIdentitySet.phone = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsPhoneIdentity(communicationsPhoneIdentity: Partial<CommunicationsPhoneIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsPhoneIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommunicationsUserIdentity(communicationsUserIdentity: Partial<CommunicationsUserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsUserIdentity),
        "tenantId": n => { communicationsUserIdentity.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCopilotAdmin(copilotAdmin: Partial<CopilotAdmin> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(copilotAdmin),
        "settings": n => { copilotAdmin.settings = n.getObjectValue<CopilotAdminSetting>(createCopilotAdminSettingFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCopilotAdminLimitedMode(copilotAdminLimitedMode: Partial<CopilotAdminLimitedMode> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(copilotAdminLimitedMode),
        "groupId": n => { copilotAdminLimitedMode.groupId = n.getStringValue(); },
        "isEnabledForGroup": n => { copilotAdminLimitedMode.isEnabledForGroup = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCopilotAdminSetting(copilotAdminSetting: Partial<CopilotAdminSetting> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(copilotAdminSetting),
        "limitedMode": n => { copilotAdminSetting.limitedMode = n.getObjectValue<CopilotAdminLimitedMode>(createCopilotAdminLimitedModeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetailsInfo(detailsInfo: Partial<DetailsInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { detailsInfo.backingStoreEnabled = true; },
        "@odata.type": n => { detailsInfo.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDictionaries(dictionaries: Partial<Dictionaries> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { dictionaries.backingStoreEnabled = true; },
        "@odata.type": n => { dictionaries.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailIdentity(emailIdentity: Partial<EmailIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(emailIdentity),
        "email": n => { emailIdentity.email = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEngagementIdentitySet(engagementIdentitySet: Partial<EngagementIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(engagementIdentitySet),
        "audience": n => { engagementIdentitySet.audience = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "group": n => { engagementIdentitySet.group = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntity(entity: Partial<Entity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { entity.backingStoreEnabled = true; },
        "id": n => { entity.id = n.getStringValue(); },
        "@odata.type": n => { entity.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentity(identity: Partial<Identity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { identity.backingStoreEnabled = true; },
        "displayName": n => { identity.displayName = n.getStringValue(); },
        "id": n => { identity.id = n.getStringValue(); },
        "@odata.type": n => { identity.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentitySet(identitySet: Partial<IdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "application": n => { identitySet.application = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "backingStoreEnabled": n => { identitySet.backingStoreEnabled = true; },
        "device": n => { identitySet.device = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "@odata.type": n => { identitySet.odataType = n.getStringValue(); },
        "user": n => { identitySet.user = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInitiator(initiator: Partial<Initiator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(initiator),
        "initiatorType": n => { initiator.initiatorType = n.getEnumValue<InitiatorType>(InitiatorTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemBody(itemBody: Partial<ItemBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { itemBody.backingStoreEnabled = true; },
        "content": n => { itemBody.content = n.getStringValue(); },
        "contentType": n => { itemBody.contentType = n.getEnumValue<BodyType>(BodyTypeObject); },
        "@odata.type": n => { itemBody.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKeyValuePair(keyValuePair: Partial<KeyValuePair> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { keyValuePair.backingStoreEnabled = true; },
        "name": n => { keyValuePair.name = n.getStringValue(); },
        "@odata.type": n => { keyValuePair.odataType = n.getStringValue(); },
        "value": n => { keyValuePair.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProgramResource(programResource: Partial<ProgramResource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(programResource),
        "type": n => { programResource.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProvisionedIdentity(provisionedIdentity: Partial<ProvisionedIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisionedIdentity),
        "details": n => { provisionedIdentity.details = n.getObjectValue<DetailsInfo>(createDetailsInfoFromDiscriminatorValue); },
        "identityType": n => { provisionedIdentity.identityType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProvisioningServicePrincipal(provisioningServicePrincipal: Partial<ProvisioningServicePrincipal> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisioningServicePrincipal),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProvisioningSystem(provisioningSystem: Partial<ProvisioningSystem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisioningSystem),
        "details": n => { provisioningSystem.details = n.getObjectValue<DetailsInfo>(createDetailsInfoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrievalExtract(retrievalExtract: Partial<RetrievalExtract> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retrievalExtract.backingStoreEnabled = true; },
        "@odata.type": n => { retrievalExtract.odataType = n.getStringValue(); },
        "text": n => { retrievalExtract.text = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrievalHit(retrievalHit: Partial<RetrievalHit> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retrievalHit.backingStoreEnabled = true; },
        "extracts": n => { retrievalHit.extracts = n.getCollectionOfObjectValues<RetrievalExtract>(createRetrievalExtractFromDiscriminatorValue); },
        "@odata.type": n => { retrievalHit.odataType = n.getStringValue(); },
        "resourceMetadata": n => { retrievalHit.resourceMetadata = n.getObjectValue<SearchResourceMetadataDictionary>(createSearchResourceMetadataDictionaryFromDiscriminatorValue); },
        "resourceType": n => { retrievalHit.resourceType = n.getEnumValue<GroundingEntityType>(GroundingEntityTypeObject); },
        "sensitivityLabel": n => { retrievalHit.sensitivityLabel = n.getObjectValue<SearchSensitivityLabelInfo>(createSearchSensitivityLabelInfoFromDiscriminatorValue); },
        "webUrl": n => { retrievalHit.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrievalResponse(retrievalResponse: Partial<RetrievalResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retrievalResponse.backingStoreEnabled = true; },
        "@odata.type": n => { retrievalResponse.odataType = n.getStringValue(); },
        "retrievalHits": n => { retrievalResponse.retrievalHits = n.getCollectionOfObjectValues<RetrievalHit>(createRetrievalHitFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchResourceMetadataDictionary(searchResourceMetadataDictionary: Partial<SearchResourceMetadataDictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDictionaries(searchResourceMetadataDictionary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchSensitivityLabelInfo(searchSensitivityLabelInfo: Partial<SearchSensitivityLabelInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { searchSensitivityLabelInfo.backingStoreEnabled = true; },
        "color": n => { searchSensitivityLabelInfo.color = n.getStringValue(); },
        "displayName": n => { searchSensitivityLabelInfo.displayName = n.getStringValue(); },
        "isEncrypted": n => { searchSensitivityLabelInfo.isEncrypted = n.getBooleanValue(); },
        "@odata.type": n => { searchSensitivityLabelInfo.odataType = n.getStringValue(); },
        "priority": n => { searchSensitivityLabelInfo.priority = n.getNumberValue(); },
        "sensitivityLabelId": n => { searchSensitivityLabelInfo.sensitivityLabelId = n.getStringValue(); },
        "tooltip": n => { searchSensitivityLabelInfo.tooltip = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServicePrincipalIdentity(servicePrincipalIdentity: Partial<ServicePrincipalIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(servicePrincipalIdentity),
        "appId": n => { servicePrincipalIdentity.appId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointIdentity(sharePointIdentity: Partial<SharePointIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(sharePointIdentity),
        "loginName": n => { sharePointIdentity.loginName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointIdentitySet(sharePointIdentitySet: Partial<SharePointIdentitySet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(sharePointIdentitySet),
        "group": n => { sharePointIdentitySet.group = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "siteGroup": n => { sharePointIdentitySet.siteGroup = n.getObjectValue<SharePointIdentity>(createSharePointIdentityFromDiscriminatorValue); },
        "siteUser": n => { sharePointIdentitySet.siteUser = n.getObjectValue<SharePointIdentity>(createSharePointIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSourceProvisionedIdentity(sourceProvisionedIdentity: Partial<SourceProvisionedIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(sourceProvisionedIdentity),
        "identityType": n => { sourceProvisionedIdentity.identityType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTargetProvisionedIdentity(targetProvisionedIdentity: Partial<TargetProvisionedIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(targetProvisionedIdentity),
        "identityType": n => { targetProvisionedIdentity.identityType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamworkApplicationIdentity(teamworkApplicationIdentity: Partial<TeamworkApplicationIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkApplicationIdentity),
        "applicationIdentityType": n => { teamworkApplicationIdentity.applicationIdentityType = n.getEnumValue<TeamworkApplicationIdentityType>(TeamworkApplicationIdentityTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamworkConversationIdentity(teamworkConversationIdentity: Partial<TeamworkConversationIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkConversationIdentity),
        "conversationIdentityType": n => { teamworkConversationIdentity.conversationIdentityType = n.getEnumValue<TeamworkConversationIdentityType>(TeamworkConversationIdentityTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamworkTagIdentity(teamworkTagIdentity: Partial<TeamworkTagIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkTagIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamworkUserIdentity(teamworkUserIdentity: Partial<TeamworkUserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkUserIdentity),
        "userIdentityType": n => { teamworkUserIdentity.userIdentityType = n.getEnumValue<TeamworkUserIdentityType>(TeamworkUserIdentityTypeObject); },
        "userPrincipalName": n => { teamworkUserIdentity.userPrincipalName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserIdentity(userIdentity: Partial<UserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(userIdentity),
        "ipAddress": n => { userIdentity.ipAddress = n.getStringValue(); },
        "userPrincipalName": n => { userIdentity.userPrincipalName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserInformation(userInformation: Partial<UserInformation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoUserIdentity(userInformation),
        "accessScope": n => { userInformation.accessScope = n.getEnumValue<AccessScope>(AccessScopeObject); },
        "customAttributes": n => { userInformation.customAttributes = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
        "role": n => { userInformation.role = n.getEnumValue<MessageUserRole>(MessageUserRoleObject); },
    }
}
export interface DetailsInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface Dictionaries extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface EmailIdentity extends Identity, Parsable {
    /**
     * The email property
     */
    email?: string | null;
}
export type EndpointType = (typeof EndpointTypeObject)[keyof typeof EndpointTypeObject];
/**
 * The Viva Engage identities.
 */
export interface EngagementIdentitySet extends IdentitySet, Parsable {
    /**
     * The audience identity.
     */
    audience?: Identity | null;
    /**
     * The group identity.
     */
    group?: Identity | null;
}
export interface Entity extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type GroundingEntityType = (typeof GroundingEntityTypeObject)[keyof typeof GroundingEntityTypeObject];
export interface Identity extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface IdentitySet extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The application property
     */
    application?: Identity | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The device property
     */
    device?: Identity | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The user property
     */
    user?: Identity | null;
}
export interface Initiator extends Identity, Parsable {
    /**
     * The initiatorType property
     */
    initiatorType?: InitiatorType | null;
}
export type InitiatorType = (typeof InitiatorTypeObject)[keyof typeof InitiatorTypeObject];
export interface ItemBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The content property
     */
    content?: string | null;
    /**
     * The contentType property
     */
    contentType?: BodyType | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface KeyValuePair extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The value property
     */
    value?: string | null;
}
export type MessageUserRole = (typeof MessageUserRoleObject)[keyof typeof MessageUserRoleObject];
export interface ProgramResource extends Identity, Parsable {
    /**
     * The type property
     */
    type?: string | null;
}
export interface ProvisionedIdentity extends Identity, Parsable {
    /**
     * The details property
     */
    details?: DetailsInfo | null;
    /**
     * The identityType property
     */
    identityType?: string | null;
}
export interface ProvisioningServicePrincipal extends Identity, Parsable {
}
export interface ProvisioningSystem extends Identity, Parsable {
    /**
     * The details property
     */
    details?: DetailsInfo | null;
}
export interface RetrievalExtract extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The text property
     */
    text?: string | null;
}
export interface RetrievalHit extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The extracts property
     */
    extracts?: RetrievalExtract[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The resourceMetadata property
     */
    resourceMetadata?: SearchResourceMetadataDictionary | null;
    /**
     * The resourceType property
     */
    resourceType?: GroundingEntityType | null;
    /**
     * The sensitivityLabel property
     */
    sensitivityLabel?: SearchSensitivityLabelInfo | null;
    /**
     * The webUrl property
     */
    webUrl?: string | null;
}
export interface RetrievalResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The retrievalHits property
     */
    retrievalHits?: RetrievalHit[] | null;
}
export interface SearchResourceMetadataDictionary extends Dictionaries, Parsable {
}
export interface SearchSensitivityLabelInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The color property
     */
    color?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The isEncrypted property
     */
    isEncrypted?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The priority property
     */
    priority?: number | null;
    /**
     * The sensitivityLabelId property
     */
    sensitivityLabelId?: string | null;
    /**
     * The tooltip property
     */
    tooltip?: string | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteraction(writer: SerializationWriter, aiInteraction: Partial<AiInteraction> | undefined | null = {}) : void {
    if (aiInteraction) {
        serializeEntity(writer, aiInteraction)
        writer.writeStringValue("appClass", aiInteraction.appClass);
        writer.writeCollectionOfObjectValues<AiInteractionAttachment>("attachments", aiInteraction.attachments, serializeAiInteractionAttachment);
        writer.writeObjectValue<ItemBody>("body", aiInteraction.body, serializeItemBody);
        writer.writeCollectionOfObjectValues<AiInteractionContext>("contexts", aiInteraction.contexts, serializeAiInteractionContext);
        writer.writeStringValue("conversationType", aiInteraction.conversationType);
        writer.writeDateValue("createdDateTime", aiInteraction.createdDateTime);
        writer.writeStringValue("etag", aiInteraction.etag);
        writer.writeObjectValue<IdentitySet>("from", aiInteraction.from, serializeIdentitySet);
        writer.writeEnumValue<AiInteractionType>("interactionType", aiInteraction.interactionType);
        writer.writeCollectionOfObjectValues<AiInteractionLink>("links", aiInteraction.links, serializeAiInteractionLink);
        writer.writeStringValue("locale", aiInteraction.locale);
        writer.writeCollectionOfObjectValues<AiInteractionMention>("mentions", aiInteraction.mentions, serializeAiInteractionMention);
        writer.writeStringValue("requestId", aiInteraction.requestId);
        writer.writeStringValue("sessionId", aiInteraction.sessionId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionAttachment(writer: SerializationWriter, aiInteractionAttachment: Partial<AiInteractionAttachment> | undefined | null = {}) : void {
    if (aiInteractionAttachment) {
        writer.writeStringValue("attachmentId", aiInteractionAttachment.attachmentId);
        writer.writeStringValue("content", aiInteractionAttachment.content);
        writer.writeStringValue("contentType", aiInteractionAttachment.contentType);
        writer.writeStringValue("contentUrl", aiInteractionAttachment.contentUrl);
        writer.writeStringValue("name", aiInteractionAttachment.name);
        writer.writeStringValue("@odata.type", aiInteractionAttachment.odataType);
        writer.writeStringValue("teamsAppId", aiInteractionAttachment.teamsAppId);
        writer.writeStringValue("thumbnailUrl", aiInteractionAttachment.thumbnailUrl);
        writer.writeAdditionalData(aiInteractionAttachment.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionCollectionResponse(writer: SerializationWriter, aiInteractionCollectionResponse: Partial<AiInteractionCollectionResponse> | undefined | null = {}) : void {
    if (aiInteractionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, aiInteractionCollectionResponse)
        writer.writeCollectionOfObjectValues<AiInteraction>("value", aiInteractionCollectionResponse.value, serializeAiInteraction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionContext(writer: SerializationWriter, aiInteractionContext: Partial<AiInteractionContext> | undefined | null = {}) : void {
    if (aiInteractionContext) {
        writer.writeStringValue("contextReference", aiInteractionContext.contextReference);
        writer.writeStringValue("contextType", aiInteractionContext.contextType);
        writer.writeStringValue("displayName", aiInteractionContext.displayName);
        writer.writeStringValue("@odata.type", aiInteractionContext.odataType);
        writer.writeAdditionalData(aiInteractionContext.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionHistory(writer: SerializationWriter, aiInteractionHistory: Partial<AiInteractionHistory> | undefined | null = {}) : void {
    if (aiInteractionHistory) {
        serializeEntity(writer, aiInteractionHistory)
        writer.writeCollectionOfObjectValues<AiInteraction>("interactions", aiInteractionHistory.interactions, serializeAiInteraction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionLink(writer: SerializationWriter, aiInteractionLink: Partial<AiInteractionLink> | undefined | null = {}) : void {
    if (aiInteractionLink) {
        writer.writeStringValue("displayName", aiInteractionLink.displayName);
        writer.writeStringValue("linkType", aiInteractionLink.linkType);
        writer.writeStringValue("linkUrl", aiInteractionLink.linkUrl);
        writer.writeStringValue("@odata.type", aiInteractionLink.odataType);
        writer.writeAdditionalData(aiInteractionLink.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionMention(writer: SerializationWriter, aiInteractionMention: Partial<AiInteractionMention> | undefined | null = {}) : void {
    if (aiInteractionMention) {
        writer.writeObjectValue<AiInteractionMentionedIdentitySet>("mentioned", aiInteractionMention.mentioned, serializeAiInteractionMentionedIdentitySet);
        writer.writeNumberValue("mentionId", aiInteractionMention.mentionId);
        writer.writeStringValue("mentionText", aiInteractionMention.mentionText);
        writer.writeStringValue("@odata.type", aiInteractionMention.odataType);
        writer.writeAdditionalData(aiInteractionMention.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiInteractionMentionedIdentitySet(writer: SerializationWriter, aiInteractionMentionedIdentitySet: Partial<AiInteractionMentionedIdentitySet> | undefined | null = {}) : void {
    if (aiInteractionMentionedIdentitySet) {
        serializeIdentitySet(writer, aiInteractionMentionedIdentitySet)
        writer.writeObjectValue<TeamworkConversationIdentity>("conversation", aiInteractionMentionedIdentitySet.conversation, serializeTeamworkConversationIdentity);
        writer.writeObjectValue<TeamworkTagIdentity>("tag", aiInteractionMentionedIdentitySet.tag, serializeTeamworkTagIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiUser(writer: SerializationWriter, aiUser: Partial<AiUser> | undefined | null = {}) : void {
    if (aiUser) {
        serializeEntity(writer, aiUser)
        writer.writeObjectValue<AiInteractionHistory>("interactionHistory", aiUser.interactionHistory, serializeAiInteractionHistory);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiUserCollectionResponse(writer: SerializationWriter, aiUserCollectionResponse: Partial<AiUserCollectionResponse> | undefined | null = {}) : void {
    if (aiUserCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, aiUserCollectionResponse)
        writer.writeCollectionOfObjectValues<AiUser>("value", aiUserCollectionResponse.value, serializeAiUser);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApprovalIdentitySet(writer: SerializationWriter, approvalIdentitySet: Partial<ApprovalIdentitySet> | undefined | null = {}) : void {
    if (approvalIdentitySet) {
        serializeIdentitySet(writer, approvalIdentitySet)
        writer.writeObjectValue<Identity>("group", approvalIdentitySet.group, serializeIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditUserIdentity(writer: SerializationWriter, auditUserIdentity: Partial<AuditUserIdentity> | undefined | null = {}) : void {
    if (auditUserIdentity) {
        serializeUserIdentity(writer, auditUserIdentity)
        writer.writeStringValue("homeTenantId", auditUserIdentity.homeTenantId);
        writer.writeStringValue("homeTenantName", auditUserIdentity.homeTenantName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureCommunicationServicesUserIdentity(writer: SerializationWriter, azureCommunicationServicesUserIdentity: Partial<AzureCommunicationServicesUserIdentity> | undefined | null = {}) : void {
    if (azureCommunicationServicesUserIdentity) {
        serializeIdentity(writer, azureCommunicationServicesUserIdentity)
        writer.writeStringValue("azureCommunicationServicesResourceId", azureCommunicationServicesUserIdentity.azureCommunicationServicesResourceId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBaseCollectionPaginationCountResponse(writer: SerializationWriter, baseCollectionPaginationCountResponse: Partial<BaseCollectionPaginationCountResponse> | undefined | null = {}) : void {
    if (baseCollectionPaginationCountResponse) {
        writer.writeNumberValue("@odata.count", baseCollectionPaginationCountResponse.odataCount);
        writer.writeStringValue("@odata.nextLink", baseCollectionPaginationCountResponse.odataNextLink);
        writer.writeAdditionalData(baseCollectionPaginationCountResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChatMessageFromIdentitySet(writer: SerializationWriter, chatMessageFromIdentitySet: Partial<ChatMessageFromIdentitySet> | undefined | null = {}) : void {
    if (chatMessageFromIdentitySet) {
        serializeIdentitySet(writer, chatMessageFromIdentitySet)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChatMessageMentionedIdentitySet(writer: SerializationWriter, chatMessageMentionedIdentitySet: Partial<ChatMessageMentionedIdentitySet> | undefined | null = {}) : void {
    if (chatMessageMentionedIdentitySet) {
        serializeIdentitySet(writer, chatMessageMentionedIdentitySet)
        writer.writeObjectValue<TeamworkConversationIdentity>("conversation", chatMessageMentionedIdentitySet.conversation, serializeTeamworkConversationIdentity);
        writer.writeObjectValue<TeamworkTagIdentity>("tag", chatMessageMentionedIdentitySet.tag, serializeTeamworkTagIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChatMessageReactionIdentitySet(writer: SerializationWriter, chatMessageReactionIdentitySet: Partial<ChatMessageReactionIdentitySet> | undefined | null = {}) : void {
    if (chatMessageReactionIdentitySet) {
        serializeIdentitySet(writer, chatMessageReactionIdentitySet)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsApplicationIdentity(writer: SerializationWriter, communicationsApplicationIdentity: Partial<CommunicationsApplicationIdentity> | undefined | null = {}) : void {
    if (communicationsApplicationIdentity) {
        serializeIdentity(writer, communicationsApplicationIdentity)
        writer.writeStringValue("applicationType", communicationsApplicationIdentity.applicationType);
        writer.writeBooleanValue("hidden", communicationsApplicationIdentity.hidden);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsApplicationInstanceIdentity(writer: SerializationWriter, communicationsApplicationInstanceIdentity: Partial<CommunicationsApplicationInstanceIdentity> | undefined | null = {}) : void {
    if (communicationsApplicationInstanceIdentity) {
        serializeIdentity(writer, communicationsApplicationInstanceIdentity)
        writer.writeBooleanValue("hidden", communicationsApplicationInstanceIdentity.hidden);
        writer.writeStringValue("tenantId", communicationsApplicationInstanceIdentity.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsEncryptedIdentity(writer: SerializationWriter, communicationsEncryptedIdentity: Partial<CommunicationsEncryptedIdentity> | undefined | null = {}) : void {
    if (communicationsEncryptedIdentity) {
        serializeIdentity(writer, communicationsEncryptedIdentity)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsGuestIdentity(writer: SerializationWriter, communicationsGuestIdentity: Partial<CommunicationsGuestIdentity> | undefined | null = {}) : void {
    if (communicationsGuestIdentity) {
        serializeIdentity(writer, communicationsGuestIdentity)
        writer.writeStringValue("email", communicationsGuestIdentity.email);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsIdentitySet(writer: SerializationWriter, communicationsIdentitySet: Partial<CommunicationsIdentitySet> | undefined | null = {}) : void {
    if (communicationsIdentitySet) {
        serializeIdentitySet(writer, communicationsIdentitySet)
        writer.writeObjectValue<Identity>("applicationInstance", communicationsIdentitySet.applicationInstance, serializeIdentity);
        writer.writeObjectValue<Identity>("assertedIdentity", communicationsIdentitySet.assertedIdentity, serializeIdentity);
        writer.writeObjectValue<Identity>("azureCommunicationServicesUser", communicationsIdentitySet.azureCommunicationServicesUser, serializeIdentity);
        writer.writeObjectValue<Identity>("encrypted", communicationsIdentitySet.encrypted, serializeIdentity);
        writer.writeEnumValue<EndpointType>("endpointType", communicationsIdentitySet.endpointType);
        writer.writeObjectValue<Identity>("guest", communicationsIdentitySet.guest, serializeIdentity);
        writer.writeObjectValue<Identity>("onPremises", communicationsIdentitySet.onPremises, serializeIdentity);
        writer.writeObjectValue<Identity>("phone", communicationsIdentitySet.phone, serializeIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsPhoneIdentity(writer: SerializationWriter, communicationsPhoneIdentity: Partial<CommunicationsPhoneIdentity> | undefined | null = {}) : void {
    if (communicationsPhoneIdentity) {
        serializeIdentity(writer, communicationsPhoneIdentity)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommunicationsUserIdentity(writer: SerializationWriter, communicationsUserIdentity: Partial<CommunicationsUserIdentity> | undefined | null = {}) : void {
    if (communicationsUserIdentity) {
        serializeIdentity(writer, communicationsUserIdentity)
        writer.writeStringValue("tenantId", communicationsUserIdentity.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCopilotAdmin(writer: SerializationWriter, copilotAdmin: Partial<CopilotAdmin> | undefined | null = {}) : void {
    if (copilotAdmin) {
        serializeEntity(writer, copilotAdmin)
        writer.writeObjectValue<CopilotAdminSetting>("settings", copilotAdmin.settings, serializeCopilotAdminSetting);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCopilotAdminLimitedMode(writer: SerializationWriter, copilotAdminLimitedMode: Partial<CopilotAdminLimitedMode> | undefined | null = {}) : void {
    if (copilotAdminLimitedMode) {
        serializeEntity(writer, copilotAdminLimitedMode)
        writer.writeStringValue("groupId", copilotAdminLimitedMode.groupId);
        writer.writeBooleanValue("isEnabledForGroup", copilotAdminLimitedMode.isEnabledForGroup);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCopilotAdminSetting(writer: SerializationWriter, copilotAdminSetting: Partial<CopilotAdminSetting> | undefined | null = {}) : void {
    if (copilotAdminSetting) {
        serializeEntity(writer, copilotAdminSetting)
        writer.writeObjectValue<CopilotAdminLimitedMode>("limitedMode", copilotAdminSetting.limitedMode, serializeCopilotAdminLimitedMode);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetailsInfo(writer: SerializationWriter, detailsInfo: Partial<DetailsInfo> | undefined | null = {}) : void {
    if (detailsInfo) {
        writer.writeStringValue("@odata.type", detailsInfo.odataType);
        writer.writeAdditionalData(detailsInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDictionaries(writer: SerializationWriter, dictionaries: Partial<Dictionaries> | undefined | null = {}) : void {
    if (dictionaries) {
        writer.writeStringValue("@odata.type", dictionaries.odataType);
        writer.writeAdditionalData(dictionaries.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailIdentity(writer: SerializationWriter, emailIdentity: Partial<EmailIdentity> | undefined | null = {}) : void {
    if (emailIdentity) {
        serializeIdentity(writer, emailIdentity)
        writer.writeStringValue("email", emailIdentity.email);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEngagementIdentitySet(writer: SerializationWriter, engagementIdentitySet: Partial<EngagementIdentitySet> | undefined | null = {}) : void {
    if (engagementIdentitySet) {
        serializeIdentitySet(writer, engagementIdentitySet)
        writer.writeObjectValue<Identity>("audience", engagementIdentitySet.audience, serializeIdentity);
        writer.writeObjectValue<Identity>("group", engagementIdentitySet.group, serializeIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntity(writer: SerializationWriter, entity: Partial<Entity> | undefined | null = {}) : void {
    if (entity) {
        writer.writeStringValue("id", entity.id);
        writer.writeStringValue("@odata.type", entity.odataType);
        writer.writeAdditionalData(entity.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentity(writer: SerializationWriter, identity: Partial<Identity> | undefined | null = {}) : void {
    if (identity) {
        writer.writeStringValue("displayName", identity.displayName);
        writer.writeStringValue("id", identity.id);
        writer.writeStringValue("@odata.type", identity.odataType);
        writer.writeAdditionalData(identity.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentitySet(writer: SerializationWriter, identitySet: Partial<IdentitySet> | undefined | null = {}) : void {
    if (identitySet) {
        writer.writeObjectValue<Identity>("application", identitySet.application, serializeIdentity);
        writer.writeObjectValue<Identity>("device", identitySet.device, serializeIdentity);
        writer.writeStringValue("@odata.type", identitySet.odataType);
        writer.writeObjectValue<Identity>("user", identitySet.user, serializeIdentity);
        writer.writeAdditionalData(identitySet.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInitiator(writer: SerializationWriter, initiator: Partial<Initiator> | undefined | null = {}) : void {
    if (initiator) {
        serializeIdentity(writer, initiator)
        writer.writeEnumValue<InitiatorType>("initiatorType", initiator.initiatorType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemBody(writer: SerializationWriter, itemBody: Partial<ItemBody> | undefined | null = {}) : void {
    if (itemBody) {
        writer.writeStringValue("content", itemBody.content);
        writer.writeEnumValue<BodyType>("contentType", itemBody.contentType);
        writer.writeStringValue("@odata.type", itemBody.odataType);
        writer.writeAdditionalData(itemBody.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKeyValuePair(writer: SerializationWriter, keyValuePair: Partial<KeyValuePair> | undefined | null = {}) : void {
    if (keyValuePair) {
        writer.writeStringValue("name", keyValuePair.name);
        writer.writeStringValue("@odata.type", keyValuePair.odataType);
        writer.writeStringValue("value", keyValuePair.value);
        writer.writeAdditionalData(keyValuePair.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProgramResource(writer: SerializationWriter, programResource: Partial<ProgramResource> | undefined | null = {}) : void {
    if (programResource) {
        serializeIdentity(writer, programResource)
        writer.writeStringValue("type", programResource.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProvisionedIdentity(writer: SerializationWriter, provisionedIdentity: Partial<ProvisionedIdentity> | undefined | null = {}) : void {
    if (provisionedIdentity) {
        serializeIdentity(writer, provisionedIdentity)
        writer.writeObjectValue<DetailsInfo>("details", provisionedIdentity.details, serializeDetailsInfo);
        writer.writeStringValue("identityType", provisionedIdentity.identityType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProvisioningServicePrincipal(writer: SerializationWriter, provisioningServicePrincipal: Partial<ProvisioningServicePrincipal> | undefined | null = {}) : void {
    if (provisioningServicePrincipal) {
        serializeIdentity(writer, provisioningServicePrincipal)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProvisioningSystem(writer: SerializationWriter, provisioningSystem: Partial<ProvisioningSystem> | undefined | null = {}) : void {
    if (provisioningSystem) {
        serializeIdentity(writer, provisioningSystem)
        writer.writeObjectValue<DetailsInfo>("details", provisioningSystem.details, serializeDetailsInfo);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrievalExtract(writer: SerializationWriter, retrievalExtract: Partial<RetrievalExtract> | undefined | null = {}) : void {
    if (retrievalExtract) {
        writer.writeStringValue("@odata.type", retrievalExtract.odataType);
        writer.writeStringValue("text", retrievalExtract.text);
        writer.writeAdditionalData(retrievalExtract.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrievalHit(writer: SerializationWriter, retrievalHit: Partial<RetrievalHit> | undefined | null = {}) : void {
    if (retrievalHit) {
        writer.writeCollectionOfObjectValues<RetrievalExtract>("extracts", retrievalHit.extracts, serializeRetrievalExtract);
        writer.writeStringValue("@odata.type", retrievalHit.odataType);
        writer.writeObjectValue<SearchResourceMetadataDictionary>("resourceMetadata", retrievalHit.resourceMetadata, serializeSearchResourceMetadataDictionary);
        writer.writeEnumValue<GroundingEntityType>("resourceType", retrievalHit.resourceType);
        writer.writeObjectValue<SearchSensitivityLabelInfo>("sensitivityLabel", retrievalHit.sensitivityLabel, serializeSearchSensitivityLabelInfo);
        writer.writeStringValue("webUrl", retrievalHit.webUrl);
        writer.writeAdditionalData(retrievalHit.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrievalResponse(writer: SerializationWriter, retrievalResponse: Partial<RetrievalResponse> | undefined | null = {}) : void {
    if (retrievalResponse) {
        writer.writeStringValue("@odata.type", retrievalResponse.odataType);
        writer.writeCollectionOfObjectValues<RetrievalHit>("retrievalHits", retrievalResponse.retrievalHits, serializeRetrievalHit);
        writer.writeAdditionalData(retrievalResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchResourceMetadataDictionary(writer: SerializationWriter, searchResourceMetadataDictionary: Partial<SearchResourceMetadataDictionary> | undefined | null = {}) : void {
    if (searchResourceMetadataDictionary) {
        serializeDictionaries(writer, searchResourceMetadataDictionary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchSensitivityLabelInfo(writer: SerializationWriter, searchSensitivityLabelInfo: Partial<SearchSensitivityLabelInfo> | undefined | null = {}) : void {
    if (searchSensitivityLabelInfo) {
        writer.writeStringValue("color", searchSensitivityLabelInfo.color);
        writer.writeStringValue("displayName", searchSensitivityLabelInfo.displayName);
        writer.writeBooleanValue("isEncrypted", searchSensitivityLabelInfo.isEncrypted);
        writer.writeStringValue("@odata.type", searchSensitivityLabelInfo.odataType);
        writer.writeNumberValue("priority", searchSensitivityLabelInfo.priority);
        writer.writeStringValue("sensitivityLabelId", searchSensitivityLabelInfo.sensitivityLabelId);
        writer.writeStringValue("tooltip", searchSensitivityLabelInfo.tooltip);
        writer.writeAdditionalData(searchSensitivityLabelInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServicePrincipalIdentity(writer: SerializationWriter, servicePrincipalIdentity: Partial<ServicePrincipalIdentity> | undefined | null = {}) : void {
    if (servicePrincipalIdentity) {
        serializeIdentity(writer, servicePrincipalIdentity)
        writer.writeStringValue("appId", servicePrincipalIdentity.appId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointIdentity(writer: SerializationWriter, sharePointIdentity: Partial<SharePointIdentity> | undefined | null = {}) : void {
    if (sharePointIdentity) {
        serializeIdentity(writer, sharePointIdentity)
        writer.writeStringValue("loginName", sharePointIdentity.loginName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointIdentitySet(writer: SerializationWriter, sharePointIdentitySet: Partial<SharePointIdentitySet> | undefined | null = {}) : void {
    if (sharePointIdentitySet) {
        serializeIdentitySet(writer, sharePointIdentitySet)
        writer.writeObjectValue<Identity>("group", sharePointIdentitySet.group, serializeIdentity);
        writer.writeObjectValue<SharePointIdentity>("siteGroup", sharePointIdentitySet.siteGroup, serializeSharePointIdentity);
        writer.writeObjectValue<SharePointIdentity>("siteUser", sharePointIdentitySet.siteUser, serializeSharePointIdentity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSourceProvisionedIdentity(writer: SerializationWriter, sourceProvisionedIdentity: Partial<SourceProvisionedIdentity> | undefined | null = {}) : void {
    if (sourceProvisionedIdentity) {
        serializeIdentity(writer, sourceProvisionedIdentity)
        writer.writeStringValue("identityType", sourceProvisionedIdentity.identityType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTargetProvisionedIdentity(writer: SerializationWriter, targetProvisionedIdentity: Partial<TargetProvisionedIdentity> | undefined | null = {}) : void {
    if (targetProvisionedIdentity) {
        serializeIdentity(writer, targetProvisionedIdentity)
        writer.writeStringValue("identityType", targetProvisionedIdentity.identityType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamworkApplicationIdentity(writer: SerializationWriter, teamworkApplicationIdentity: Partial<TeamworkApplicationIdentity> | undefined | null = {}) : void {
    if (teamworkApplicationIdentity) {
        serializeIdentity(writer, teamworkApplicationIdentity)
        writer.writeEnumValue<TeamworkApplicationIdentityType>("applicationIdentityType", teamworkApplicationIdentity.applicationIdentityType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamworkConversationIdentity(writer: SerializationWriter, teamworkConversationIdentity: Partial<TeamworkConversationIdentity> | undefined | null = {}) : void {
    if (teamworkConversationIdentity) {
        serializeIdentity(writer, teamworkConversationIdentity)
        writer.writeEnumValue<TeamworkConversationIdentityType>("conversationIdentityType", teamworkConversationIdentity.conversationIdentityType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamworkTagIdentity(writer: SerializationWriter, teamworkTagIdentity: Partial<TeamworkTagIdentity> | undefined | null = {}) : void {
    if (teamworkTagIdentity) {
        serializeIdentity(writer, teamworkTagIdentity)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamworkUserIdentity(writer: SerializationWriter, teamworkUserIdentity: Partial<TeamworkUserIdentity> | undefined | null = {}) : void {
    if (teamworkUserIdentity) {
        serializeIdentity(writer, teamworkUserIdentity)
        writer.writeEnumValue<TeamworkUserIdentityType>("userIdentityType", teamworkUserIdentity.userIdentityType);
        writer.writeStringValue("userPrincipalName", teamworkUserIdentity.userPrincipalName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserIdentity(writer: SerializationWriter, userIdentity: Partial<UserIdentity> | undefined | null = {}) : void {
    if (userIdentity) {
        serializeIdentity(writer, userIdentity)
        writer.writeStringValue("ipAddress", userIdentity.ipAddress);
        writer.writeStringValue("userPrincipalName", userIdentity.userPrincipalName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserInformation(writer: SerializationWriter, userInformation: Partial<UserInformation> | undefined | null = {}) : void {
    if (userInformation) {
        serializeUserIdentity(writer, userInformation)
        writer.writeEnumValue<AccessScope>("accessScope", userInformation.accessScope);
        writer.writeCollectionOfObjectValues<KeyValuePair>("customAttributes", userInformation.customAttributes, serializeKeyValuePair);
        writer.writeEnumValue<MessageUserRole>("role", userInformation.role);
    }
}
export interface ServicePrincipalIdentity extends Identity, Parsable {
    /**
     * The appId property
     */
    appId?: string | null;
}
export interface SharePointIdentity extends Identity, Parsable {
    /**
     * The loginName property
     */
    loginName?: string | null;
}
export interface SharePointIdentitySet extends IdentitySet, Parsable {
    /**
     * The group property
     */
    group?: Identity | null;
    /**
     * The siteGroup property
     */
    siteGroup?: SharePointIdentity | null;
    /**
     * The siteUser property
     */
    siteUser?: SharePointIdentity | null;
}
export interface SourceProvisionedIdentity extends Identity, Parsable {
    /**
     * The identityType property
     */
    identityType?: string | null;
}
export interface TargetProvisionedIdentity extends Identity, Parsable {
    /**
     * The identityType property
     */
    identityType?: string | null;
}
export interface TeamworkApplicationIdentity extends Identity, Parsable {
    /**
     * The applicationIdentityType property
     */
    applicationIdentityType?: TeamworkApplicationIdentityType | null;
}
export type TeamworkApplicationIdentityType = (typeof TeamworkApplicationIdentityTypeObject)[keyof typeof TeamworkApplicationIdentityTypeObject];
export interface TeamworkConversationIdentity extends Identity, Parsable {
    /**
     * The conversationIdentityType property
     */
    conversationIdentityType?: TeamworkConversationIdentityType | null;
}
export type TeamworkConversationIdentityType = (typeof TeamworkConversationIdentityTypeObject)[keyof typeof TeamworkConversationIdentityTypeObject];
export interface TeamworkTagIdentity extends Identity, Parsable {
}
export interface TeamworkUserIdentity extends Identity, Parsable {
    /**
     * The userIdentityType property
     */
    userIdentityType?: TeamworkUserIdentityType | null;
    /**
     * The userPrincipalName property
     */
    userPrincipalName?: string | null;
}
export type TeamworkUserIdentityType = (typeof TeamworkUserIdentityTypeObject)[keyof typeof TeamworkUserIdentityTypeObject];
export interface UserIdentity extends Identity, Parsable {
    /**
     * The ipAddress property
     */
    ipAddress?: string | null;
    /**
     * The userPrincipalName property
     */
    userPrincipalName?: string | null;
}
export interface UserInformation extends Parsable, UserIdentity {
    /**
     * The accessScope property
     */
    accessScope?: AccessScope | null;
    /**
     * The customAttributes property
     */
    customAttributes?: KeyValuePair[] | null;
    /**
     * The role property
     */
    role?: MessageUserRole | null;
}
export const AccessScopeObject = {
    InOrganization: "inOrganization",
    NotInOrganization: "notInOrganization",
    None: "none",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AiInteractionTypeObject = {
    UserPrompt: "userPrompt",
    AiResponse: "aiResponse",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const BodyTypeObject = {
    Text: "text",
    Html: "html",
} as const;
export const EndpointTypeObject = {
    DefaultEscaped: "default",
    Voicemail: "voicemail",
    SkypeForBusiness: "skypeForBusiness",
    SkypeForBusinessVoipPhone: "skypeForBusinessVoipPhone",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const GroundingEntityTypeObject = {
    Site: "site",
    List: "list",
    ListItem: "listItem",
    Drive: "drive",
    DriveItem: "driveItem",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const InitiatorTypeObject = {
    User: "user",
    Application: "application",
    System: "system",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const MessageUserRoleObject = {
    EnvelopeFrom: "envelopeFrom",
    HeaderFrom: "headerFrom",
    To: "to",
    Cc: "cc",
    Bcc: "bcc",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TeamworkApplicationIdentityTypeObject = {
    AadApplication: "aadApplication",
    Bot: "bot",
    TenantBot: "tenantBot",
    Office365Connector: "office365Connector",
    OutgoingWebhook: "outgoingWebhook",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TeamworkConversationIdentityTypeObject = {
    Team: "team",
    Channel: "channel",
    Chat: "chat",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TeamworkUserIdentityTypeObject = {
    AadUser: "aadUser",
    OnPremiseAadUser: "onPremiseAadUser",
    AnonymousGuest: "anonymousGuest",
    FederatedUser: "federatedUser",
    PersonalMicrosoftAccountUser: "personalMicrosoftAccountUser",
    SkypeUser: "skypeUser",
    PhoneUser: "phoneUser",
    UnknownFutureValue: "unknownFutureValue",
    EmailUser: "emailUser",
    AzureCommunicationServicesUser: "azureCommunicationServicesUser",
} as const;
/* tslint:enable */
/* eslint-enable */
