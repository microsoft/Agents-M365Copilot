// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Agents.M365Copilot.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MultiActivitySubscription : global::Microsoft.Agents.M365Copilot.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activities property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities? Activities
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities?>("activities"); }
            set { BackingStore?.Set("activities", value); }
        }
#nullable restore
#else
        public global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities Activities
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities>("activities"); }
            set { BackingStore?.Set("activities", value); }
        }
#endif
        /// <summary>The callbackUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CallbackUrl
        {
            get { return BackingStore?.Get<string?>("callbackUrl"); }
            set { BackingStore?.Set("callbackUrl", value); }
        }
#nullable restore
#else
        public string CallbackUrl
        {
            get { return BackingStore?.Get<string>("callbackUrl"); }
            set { BackingStore?.Set("callbackUrl", value); }
        }
#endif
        /// <summary>The chatInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo? ChatInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo?>("chatInfo"); }
            set { BackingStore?.Set("chatInfo", value); }
        }
#nullable restore
#else
        public global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo ChatInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo>("chatInfo"); }
            set { BackingStore?.Set("chatInfo", value); }
        }
#endif
        /// <summary>The meetingInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo? MeetingInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo?>("meetingInfo"); }
            set { BackingStore?.Set("meetingInfo", value); }
        }
#nullable restore
#else
        public global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo MeetingInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo>("meetingInfo"); }
            set { BackingStore?.Set("meetingInfo", value); }
        }
#endif
        /// <summary>The userId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId
        {
            get { return BackingStore?.Get<string?>("userId"); }
            set { BackingStore?.Set("userId", value); }
        }
#nullable restore
#else
        public string UserId
        {
            get { return BackingStore?.Get<string>("userId"); }
            set { BackingStore?.Set("userId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Agents.M365Copilot.Beta.Models.MultiActivitySubscription"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Agents.M365Copilot.Beta.Models.MultiActivitySubscription CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Agents.M365Copilot.Beta.Models.MultiActivitySubscription();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "activities", n => { Activities = n.GetObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities>(global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities.CreateFromDiscriminatorValue); } },
                { "callbackUrl", n => { CallbackUrl = n.GetStringValue(); } },
                { "chatInfo", n => { ChatInfo = n.GetObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo>(global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo.CreateFromDiscriminatorValue); } },
                { "meetingInfo", n => { MeetingInfo = n.GetObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo>(global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo.CreateFromDiscriminatorValue); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.SubscriptionActivities>("activities", Activities);
            writer.WriteStringValue("callbackUrl", CallbackUrl);
            writer.WriteObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.ChatInfo>("chatInfo", ChatInfo);
            writer.WriteObjectValue<global::Microsoft.Agents.M365Copilot.Beta.Models.MeetingInfo>("meetingInfo", MeetingInfo);
            writer.WriteStringValue("userId", UserId);
        }
    }
}
#pragma warning restore CS0618
