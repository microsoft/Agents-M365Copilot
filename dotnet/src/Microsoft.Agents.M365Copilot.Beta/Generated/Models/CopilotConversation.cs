// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Agents.M365Copilot.Beta.Models
{
    /// <summary>
    /// Conversation is a first class object in the system, and consists of persistent metadata plus a stream of messages,typically alternating request/response, implicitly forming a turn.Represents a conversation with Copilot Chat.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CopilotConversation : global::Microsoft.Agents.M365Copilot.Beta.Models.Entity, IParsable
    {
        /// <summary>The date and time when the conversation was created.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>The display name of the conversation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The ordered list of messages in the conversation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage>? Messages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage>?>("messages"); }
            set { BackingStore?.Set("messages", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage> Messages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage>>("messages"); }
            set { BackingStore?.Set("messages", value); }
        }
#endif
        /// <summary>The state of a Copilot conversation.</summary>
        public global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationState? State
        {
            get { return BackingStore?.Get<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationState?>("state"); }
            set { BackingStore?.Set("state", value); }
        }
        /// <summary>The number of turns in the conversation.</summary>
        public int? TurnCount
        {
            get { return BackingStore?.Get<int?>("turnCount"); }
            set { BackingStore?.Set("turnCount", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "messages", n => { Messages = n.GetCollectionOfObjectValues<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage>(global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "state", n => { State = n.GetEnumValue<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationState>(); } },
                { "turnCount", n => { TurnCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationMessage>("messages", Messages);
            writer.WriteEnumValue<global::Microsoft.Agents.M365Copilot.Beta.Models.CopilotConversationState>("state", State);
        }
    }
}
#pragma warning restore CS0618
