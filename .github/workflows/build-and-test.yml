name: Build and validate Copilot sdk code

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "dotnet/**"
      - "python/**"
      - "typescript/**"
  pull_request:
    branches: ["main"]
    paths:
      - "dotnet/**"
      - "python/**"
      - "typescript/**"

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      dotnet: ${{ steps.check.outputs.dotnet }}
      python: ${{ steps.check.outputs.python }}
      typescript: ${{ steps.check.outputs.typescript }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check changed files
        id: check
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed Files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q "^dotnet/"; then
            echo "dotnet=true" >> $GITHUB_OUTPUT
          else
            echo "dotnet=false" >> $GITHUB_OUTPUT
          fi

          if echo "$CHANGED_FILES" | grep -q "^python/"; then
            echo "python=true" >> $GITHUB_OUTPUT
          else
            echo "python=false" >> $GITHUB_OUTPUT
          fi

          if echo "$CHANGED_FILES" | grep -q "^typescript/"; then
            echo "typescript=true" >> $GITHUB_OUTPUT
          else
            echo "typescript=false" >> $GITHUB_OUTPUT
          fi

  dotnet:
    name: Build and test .NET Beta and core code
    needs: check-changes
    runs-on: ubuntu-latest
    env:
      solutionName: Microsoft.Agents.M365Copilot.sln
    steps:
      - name: Early exit if not needed
        if: ${{ needs.check-changes.outputs.dotnet != 'true' && github.event_name != 'workflow_dispatch' }}
        run: echo "No .NET changes detected, skipping." && exit 0
      - uses: actions/checkout@v4.2.2
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: 8.x
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
      - name: Restore dependencies
        run: dotnet restore ${{ env.solutionName }}
        working-directory: dotnet
      - name: Build
        run: dotnet build ${{ env.solutionName }} --no-restore -c Release /p:UseSharedCompilation=false
        working-directory: dotnet
      - name: Test
        run: dotnet test ${{ env.solutionName }} --no-build --verbosity normal -c Release /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover
        working-directory: dotnet
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  python:
    name: Build and test Python Beta and core code
    needs: check-changes
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Early exit if not needed
        if: ${{ needs.check-changes.outputs.python != 'true' && github.event_name != 'workflow_dispatch' }}
        run: echo "No Python changes detected, skipping." && exit 0
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r microsoft_agents_m365copilot_core/requirements-dev.txt
        working-directory: python
      - name: Lint SDK with Pylint
        run: pylint microsoft_agents_m365copilot_beta --disable=W --rcfile=.pylintrc
        working-directory: python
      - name: Lint Core Library with Pylint
        run: pylint microsoft_agents_m365copilot_core --disable=W --rcfile=microsoft_agents_m365copilot_core/.pylintrc
        working-directory: python
      - name: Test Core Library
        run: pytest microsoft_agents_m365copilot_core
        working-directory: python
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

  typescript:
    name: Build and test TypeScript Beta and core code
    needs: check-changes
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max_old_space_size=9182"
    environment:
      name: build_test
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Early exit if not needed
        if: ${{ needs.check-changes.outputs.typescript != 'true' && github.event_name != 'workflow_dispatch' }}
        run: echo "No TypeScript changes detected, skipping." && exit 0
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: typescript
      - run: npm run build
        working-directory: typescript
      - name: Check for Secret availability
        id: my-key-check
        shell: bash
        run: |
          if [ "${{ secrets.client_secret }}" != '' ]; then
            echo "defined=true" >> $GITHUB_OUTPUT;
          else
            echo "defined=false" >> $GITHUB_OUTPUT;
          fi
      - run: npm run test
        if: steps.my-key-check.outputs.defined == 'true'
        env:
          TENANT_ID: ${{secrets.tenant_id}}
          CLIENT_ID: ${{secrets.client_id}}
          CLIENT_SECRET: ${{secrets.client_secret}}
          USER_ID: ${{secrets.user_id}}
        working-directory: typescript

  check-build-matrix:
    name: Checks and validates the build matrix
    needs: [check-changes, dotnet, python, typescript]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: No builds triggered - passing check
        if: ${{ !needs.check-changes.outputs.dotnet && !needs.check-changes.outputs.python && !needs.check-changes.outputs.typescript }}
        run: exit 0

      - name: All triggered builds are successful
        if: |
          (needs.check-changes.outputs.dotnet || needs.check-changes.outputs.python || needs.check-changes.outputs.typescript) &&
          (!needs.check-changes.outputs.dotnet || needs.dotnet.result == 'success' || needs.dotnet.result == 'skipped') &&
          (!needs.check-changes.outputs.python || needs.python.result == 'success' || needs.python.result == 'skipped') &&
          (!needs.check-changes.outputs.typescript || needs.typescript.result == 'success' || needs.typescript.result == 'skipped')
        run: exit 0

      - name: One or more triggered builds failed
        if: |
          (needs.check-changes.outputs.dotnet && needs.dotnet.result == 'failure') ||
          (needs.check-changes.outputs.python && needs.python.result == 'failure') ||
          (needs.check-changes.outputs.typescript && needs.typescript.result == 'failure')
        run: exit 1
